print('hello world')
8+22
5-6
5*76
20/11
4^4
print(12)
sin(45)
log(1)
?log()
?print
x = 5
x
y <- 11
y
weight_kg = 55
weight_lb <- weight_kg*2.2
weight_lb
weight_kg = 100
weight_lb
#test
installed.packages("gapminder")
installed.packages("tidyverse")
install.packages("gapminder")
install.packages("tidyverse")
1:10
#vectors
clasS(11)
class(1)
class(true)
class(True)
vecotr <- 1:10
vecotr*3
#concatenate
c(1,3,9,12)
c('1','3','9','12')
text <- c('1','3','9','12')
text
#vectors can hold only type of data
as.numeric(text)
#as. functions help to convert
print('Our script works')
source('~/Downloads/Projects/swc-queens-nov2017/cats.R')
#dataset = read.csv('cats.csv')
dataset = read.csv('cats.csv')
View(dataset)
View(dataset)
class(cats)
class(dataset)
str(dataset)
dataset$coat + 7
dataset$weight <- dataset$weight + 10
View(dataset)
View(dataset)
dataset$likes_string <- as.logical(dataset$likes_string)
View(dataset)
View(dataset)
paste('the cat is', dataset$coat)
test <- c(3,2,1,6)
test[2]
test[11]
test[length(test)]
test[1:3]
test[1:3] <-  10
test
test < 4
test > 4
test > 7
test[test > 7]
test > 10
test > 8
bad_values <-  c(NA, 4,8,3,2,1)
mean(bad_values)
is.na(bad_values)
bad_values
bad_values <-  bad_values[is.na(bad_values)]
bad_values
bad_values <-  c(NA, 4,8,3,2,1)
mean(bad_values)
bad_values <-  bad_values[!is.na(bad_values)]
bad_values
is.na(bad_values)
bad_values <-  c(NA, 4,8,3,2,1)
mean(bad_values)
is.na(bad_values)
!is.na(bad_values)
test[length(test)]
mean(bad_values)
is.na(bad_values)
!is.na(bad_values)
bad_values <-  bad_values[!is.na(bad_values)]
mean(bad_values)
bad_values <-  c(NA, 4,8,3,2,1)
mean(bad_values, na.rm = TRUE)
bad_values
demo_list <- list(1, True, "words", 1:4, list(1))
demo_list <- list(1, TRUE, "words", 1:4, list(1))
demo_list
demo_list[1]
demo_list[[1]]
demo_list
mat <-  matrix(1:10, nrow = 4, ncol = 4)
mat
mat[1,1
mat[1,1]
mat[1,1]
mat <-  matrix(1:16, nrow = 4, ncol = 4)
mat
mat[3,3]
mat*2
mat[1,]
library(gapminder)
gap <-  gapminder
head(gap)
tail(gap)
dim(gap)
nrow(gap)
ncol(gap)
colnames(gap)
str(gap)
str(gap)
colnames(gap)
str(gap)
unique(gap$country)
str(gap)
gap$country == "Canada"
gap$country[gap$country == "Canada"]
gap$country[gap$country == "Canada",]
gap[gap$country == "Canada",]
canada <- gap[gap$country == "Canada",]
#stack or merge dataframes
double_canada <- rbind(canada, canada)
View(double_canada)
View(double_canada)
#stacks dataframes side by side
test_canada <- cbind(canada, canada)
View(test_canada)
View(test_canada)
print(canada, width = Inf)
canada$gdp <- canada$gdp * canada$gdpPercap
View(canada)
View(canada)
one <- c(1,2,3,4,5)
one %in% two
#to check if one vector has some values similar to another vector
one %in% two
two <- c(1,2,3,4,5)
#to check if one vector has some values similar to another vector
one %in% two
#to check if one vector has some values similar to another vector
one %in% two
two <- c(1,6,9,12,5)
#to check if one vector has some values similar to another vector
one %in% two
library(gapminder)
library(ggplot2)
library(gapminder)
gap <-  gapminder
str(gap)
ggplot(gap)
ggplot(gap, aes(x=gdpPercap, y=lifeExp))
ggplot()
library(tidyverse)
ggplot()
ggplot(gap, aes(x=gdpPercap, y=lifeExp))
ggplot(gap, aes(x=gdpPercap, y=lifeExp)) + geom_point()
ggplot(gap, aes(x=gdpPercap, y=lifeExp)) + geom_point()
ggplot(gap, aes(x=log10(gdpPercap), y=lifeExp)) + geom_point()
ggplot(gap, aes(x=gdpPercap, y=lifeExp)) + geom_point() + scale_x_log10()
ggplot(gap, aes(x=gdpPercap, y=lifeExp, colors(distinct = TRUE))) + geom_point() + scale_x_log10()
ggplot(gap, aes(x=gdpPercap, y=lifeExp, colours())) + geom_point() + scale_x_log10()
ggplot(gap, aes(x=gdpPercap, y=lifeExp, colours())) + geom_point() + scale_x_log10()
ggplot(gap, aes(x=gdpPercap, y=lifeExp, colours())) + geom_point() + scale_x_log10()
# with colors and legends
ggplot(gap, aes(x=gdpPercap, y=lifeExp, colour(continent))) + geom_point() + scale_x_log10()
# with colors and legends
ggplot(gap, aes(x=gdpPercap, y=lifeExp, colour=continent)) + geom_point() + scale_x_log10()
View(canada)
View(canada)
# challenge
ggplot(gap, aes(x=year, y=lifeExp, colour=continent)) + geom_point() + scale_x_log10()
# challenge
ggplot(gap, aes(x=years, y=lifeExp, colour=continent)) + geom_point() + scale_x_log10()
# challenge
ggplot(gap, aes(x=years, y=lifeExp, colour=continent)) + geom_point() + scale_x_log10()
View(canada)
View(canada)
# challenge
ggplot(gap, aes(x=year, y=lifeExp, colour=continent)) + geom_point() + scale_x_log10()
# challenge
ggplot(gap, aes(x=year, y=lifeExp, colour=continent)) + geom_point()
# challenge
ggplot(gap, aes(x=year.mean(), y=lifeExp, colour=continent)) + geom_point()
# challenge
ggplot(gap, aes(x=year, y=lifeExp, colour=continent)) + geom_point()
ggplot(gap, aes(x=group, y=lifeExp, colour=continent)) + geom_boxplot()
ggplot(gap, aes(x=group, y=lifeExp, colour=continent)) + geom_boxplot()
ggplot(gap, aes(x=group(year), y=lifeExp, colour=continent)) + geom_boxplot()
ggplot(gap, aes(x=groups(year), y=lifeExp, colour=continent)) + geom_boxplot()
ggplot(gap, aes(x=year, y=lifeExp, colour=continent)) + geom_boxplot()
ggplot(gap, aes(x=year, y=lifeExp, colour=continent)) + geom_bar()
ggplot(gap, aes(x=year, y=lifeExp, colour=continent)) + geom_bar()
ggplot(gap, aes(x=year, y=lifeExp, colour=continent)) + geom_boxplot()
ggplot(gap, aes(x=year, y=lifeExp, group=year colour=continent)) + geom_boxplot()
ggplot(gap, aes(x=year, y=lifeExp, group=year, colour=continent)) + geom_boxplot()
ggplot(gap, aes(x=year, y=lifeExp, group=year)) + geom_boxplot()
ggplot(gap, aes(x=year, y=lifeExp, group=year, colour=continent)) + geom_boxplot()
ggplot(gap, aes(x=continent, y=lifeExp)) + geom_boxplot()
ggplot(gap, aes(x=year, y=lifeExp)) + geom_boxplot() + facet_wrap(~continent)
ggplot(gap, aes(x=year, y=lifeExp, group=year)) + geom_boxplot() + facet_wrap(~continent)
ggsave('plot1'.png)
ggsave('plot1.png')
ggplot(gap, aes(x=continent, y=lifeExp)) + geom_boxplot()
#cool chart
ggplot(gap, aes(x=continent, y=lifeExp, fill=continent)) + geom_violin()
#cool chart
ggplot(gap, aes(x=continent, y=lifeExp, fill=continent)) + geom_violin() + scale_fill_continuous()
#cool chart
ggplot(gap, aes(x=continent, y=lifeExp, fill=continent)) + geom_violin() + scale_fill_brewer()
#cool chart
ggplot(gap, aes(x=continent, y=lifeExp, fill=continent)) + geom_violin()
#
ggplot(gap, aes(x=log10(gdpPercap), y=lifeExp, color=lifeExp)) + geom_point()
#
ggplot(gap, aes(x=log10(gdpPercap), y=lifeExp, color=lifeExp)) + geom_point(size = 0.1)
#Change size and shape
ggplot(gap, aes(x=log10(gdpPercap), y=lifeExp, color=lifeExp)) + geom_point(shape = 2,size = 0.1)
#Change size and shape
ggplot(gap, aes(x=log10(gdpPercap), y=lifeExp, color=lifeExp)) + geom_point(shape = 4,size = 0.1)
#Change size and shape
ggplot(gap, aes(x=log10(gdpPercap), y=lifeExp, color=lifeExp)) + geom_point(shape = 4)
#Change size and shape
ggplot(gap, aes(x=log10(gdpPercap), y=lifeExp, color=lifeExp)) + geom_point(size = 0.4)
ggplot(gap, aes(x=log10(gdpPercap), y=lifeExp, color=lifeExp)) + geom_point(shape = 4) +
scale_color_gradient(low=green, high=yellow)
ggplot(gap, aes(x=log10(gdpPercap), y=lifeExp, color=lifeExp)) + geom_point(shape = 4) +
scale_color_gradient(low="green", high="yellow")
ggplot(gap, aes(x=log10(gdpPercap), y=lifeExp, color=lifeExp)) + geom_point(shape = 4) +
scale_color_gradient(low="red", high="darkorchid")
# Add color gradient to the scale
ggplot(gap, aes(x=log10(gdpPercap), y=lifeExp, color=lifeExp)) + geom_point(shape = 4) +
scale_color_gradient(low="red", high="darkorchid") + theme_classic()
ggplot(gap, aes(x=log10(gdpPercap), y=lifeExp, color=continent)) + geom_point(shape = 4) +
scale_color_gradient(low="red", high="darkorchid") + theme_classic()
ggplot(gap, aes(x=gdpPercap, y=lifeExp, color=continent)) + geom_point(shape = 4) +
scale_color_gradient(low="red", high="darkorchid") + theme_classic()
ggplot(gap, aes(x=gdpPercap, y=lifeExp, color=continent)) + geom_point(shape = 4)
ggplot(gap, aes(x=gdpPercap, y=lifeExp, color=continent)) + geom_point(shape = 4) + facet_wrap(~continent)
ggplot(gap, aes(x=gdpPercap, y=lifeExp, color=continent)) + geom_point(shape = 4) + facet_wrap(~continent) + ggtitle("Test Graph")
ggplot(gap, aes(x=gdpPercap, y=lifeExp, color=continent)) + geom_point(shape = 4) + ggtitle("Test Graph")
ggplot(gap, aes(x=gdpPercap, y=lifeExp, color=continent)) + geom_point(shape = 4) + facet_wrap(~continent) + ggtitle("Test Graph")
#Challenge 2
ggplot(gap, aes(x=gdpPercap, y=lifeExp, color=continent)) + geom_density(shape = 4) + ggtitle("Test Graph")
#Challenge 2
ggplot(gap, aes(x=gdpPercap, y=lifeExp, color=continent)) + geom_density() + ggtitle("Test Graph")
#Challenge 2
ggplot(gap, aes(x=gdpPercap, y=lifeExp, color=continent)) + geom_density()
#Challenge 2
ggplot(gap, aes(x=gdpPercap, y=lifeExp, color=continent)) + geom_density()
#Challenge 2
ggplot(gap, aes(x=gdpPercap, y=lifeExp)) + geom_density()
#Challenge 2
ggplot(gap, aes(x=gdpPercap, y=lifeExp)) + geom_density()
ggplot(gap, aes(x=gdpPercap, y=lifeExp)) + geom_density() + facet_wrap(~continent) + ggtitle("Test Graph")
#Challenge 2
ggplot(gap, aes(x=gdpPercap, y=lifeExp)) + geom_density()
ggplot(gap, aes(x=gdpPercap, y=lifeExp)) + geom_density()
#Challenge 2
ggplot(gap, aes(x=gdpPercap)) + geom_density()
#Challenge 2
ggplot(gap, aes(x=gdpPercap, color=continent)) + geom_density()
ggplot(gap, aes(x=gdpPercap)) + geom_density() + facet_wrap(~continent) + ggtitle("Test Graph")
ggplot(gap, aes(x=gdpPercap, color=continent)) + geom_density() + facet_wrap(~continent) + ggtitle("Test Graph")
ggplot(gap, aes(x=log10(gdpPercap), color=continent)) + geom_density() + facet_wrap(~continent) + ggtitle("Test Graph")
#Challenge 2
ggplot(gap, aes(x=log10(gdpPercap, color=continent)) + geom_density()
#Challenge 2
ggplot(gap, aes(x=log10(gdpPercap, color=continent)) + geom_density()
#Challenge 2
ggplot(gap, aes(x=log10(gdpPercap), color=continent)) + geom_density()
#Challenge 2
ggplot(gap, aes(x=log10(gdpPercap), color=continent)) + geom_density(position=stack)
#Challenge 2
ggplot(gap, aes(x=log10(gdpPercap), color=continent)) + geom_density(position='stack')
#Challenge 2
ggplot(gap, aes(x=gdpPercap, color=continent)) + geom_density(position='stack')
#Challenge 2
ggplot(gap, aes(x=gdpPercap, color=continent)) + geom_density(adjust = 1/4, position='stack')
#Challenge 2
ggplot(gap, aes(x=gdpPercap, color=continent)) + geom_density(adjust = 4, position='stack')
#Challenge 2
ggplot(gap, aes(x=gdpPercap, color=continent)) + geom_density(adjust = 1/10, position='stack')
#Challenge 2
ggplot(gap, aes(x=gdpPercap, color=continent)) + geom_density(adjust = 1/2, position='stack')
ggplot(gap, aes(x=log10(gdpPercap), color=continent)) + geom_density() + facet_wrap(~continent) + ggtitle("Test Graph")
#Challenge 2
ggplot(gap, aes(x=log10(gdpPercap), color=continent)) + geom_density(adjust = 1/2, position='stack')
#Challenge 2
ggplot(gap, aes(x=log10(gdpPercap))) + geom_density(adjust = 1/2, position='stack')
#Challenge 2
ggplot(gap, aes(x=log10(gdpPercap))) + geom_density(position='stack')
#Challenge 2
ggplot(gap, aes(x=log10(gdpPercap), color=continent)) + geom_density(position='stack')
ggplot(gap, aes(x=log10(gdpPercap), color=continent)) + geom_density() + facet_wrap(~continent) + ggtitle("Test Graph")
ggplot(gap, aes(x=log10(gdpPercap), color=continent)) + geom_density(position='stack') + facet_wrap(~continent) + ggtitle("Test Graph")
#Challenge 2
#use adjust or position parameter of density() to get better graphs
ggplot(gap, aes(x=log10(gdpPercap), color=continent)) + geom_density(position='stack', aplha=0.3)
#Challenge 2
#use adjust or position parameter of density() to get better graphs
ggplot(gap, aes(x=log10(gdpPercap), color=continent)) + geom_density(aplha=0.3)
#Challenge 2
#use adjust or position parameter of density() to get better graphs
ggplot(gap, aes(x=log10(gdpPercap), color=continent)) + geom_density(alpha=0.3)
#Challenge 2
#use adjust or position parameter of density() to get better graphs
ggplot(gap, aes(x=log10(gdpPercap), fill=continent)) + geom_density(alpha=0.3)
ggplot(gap, aes(x=log10(gdpPercap), color=continent)) + geom_density(position='stack', aplha=0.3) + facet_wrap(~continent) + ggtitle("Test Graph")
ggplot(gap, aes(x=log10(gdpPercap), fill=continent)) + geom_density(position='stack', aplha=0.3) + facet_wrap(~continent) + ggtitle("Test Graph")
